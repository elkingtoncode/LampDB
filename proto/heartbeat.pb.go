// Code generated by protoc-gen-gogo.
// source: cockroach/proto/heartbeat.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/gogo/protobuf/proto"
import math "math"

// discarding unused import gogoproto "gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

// RemoteOffset keeps track of this client's estimate of its offset from a
// remote server. Uncertainty is the maximum error in the reading of this
// offset, so that the real offset should be in the interval
// [Offset - Uncertainty, Offset + Uncertainty]. If the last heartbeat timed
// out, Offset = 0.
//
// Offset and Uncertainty are measured using the remote clock reading technique
// described in http://se.inf.tu-dresden.de/pubs/papers/SRDS1994.pdf, page 6.
type RemoteOffset struct {
	// The estimated offset from the remote server, in nanoseconds.
	Offset int64 `protobuf:"varint,1,opt,name=offset" json:"offset"`
	// The maximum error of the measured offset, in nanoseconds.
	Uncertainty int64 `protobuf:"varint,2,opt,name=uncertainty" json:"uncertainty"`
	// Measurement time, in nanoseconds from unix epoch.
	MeasuredAt       int64  `protobuf:"varint,3,opt,name=measured_at" json:"measured_at"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoteOffset) Reset()      { *m = RemoteOffset{} }
func (*RemoteOffset) ProtoMessage() {}

func (m *RemoteOffset) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *RemoteOffset) GetUncertainty() int64 {
	if m != nil {
		return m.Uncertainty
	}
	return 0
}

func (m *RemoteOffset) GetMeasuredAt() int64 {
	if m != nil {
		return m.MeasuredAt
	}
	return 0
}

// A PingRequest specifies the string to echo in response.
// Fields are exported so that they will be serialized in the rpc call.
type PingRequest struct {
	// Echo this string with PingResponse.
	Ping string `protobuf:"bytes,1,opt,name=ping" json:"ping"`
	// The last offset the client measured with the server.
	Offset RemoteOffset `protobuf:"bytes,2,opt,name=offset" json:"offset"`
	// The address of the client.
	Addr             string `protobuf:"bytes,3,opt,name=addr" json:"addr"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}

func (m *PingRequest) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

func (m *PingRequest) GetOffset() RemoteOffset {
	if m != nil {
		return m.Offset
	}
	return RemoteOffset{}
}

func (m *PingRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

// A PingResponse contains the echoed ping request string.
type PingResponse struct {
	// An echo of value sent with PingRequest.
	Pong             string `protobuf:"bytes,1,opt,name=pong" json:"pong"`
	ServerTime       int64  `protobuf:"varint,2,opt,name=server_time" json:"server_time"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}

func (m *PingResponse) GetPong() string {
	if m != nil {
		return m.Pong
	}
	return ""
}

func (m *PingResponse) GetServerTime() int64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}
